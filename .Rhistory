p <- ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=value, color=variable))
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=value, color=variable))
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=Value, color=variable))
View(time_series_1)
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=Days_since, color=variable))
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=Days_since, color=Version))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
ylab("Days until event") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1)
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=Days_since, color=Version))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
ylab("Days until event") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1)
ggtitle("")
ggtitle("d")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("d")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(2)
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline()
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(2)
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(aes(x=2))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(aes(0.5))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_vline(aes(0.5))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + #geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
time_series_1 = read.csv("time_series_1.csv")
time_series_1$Date <- as.Date(time_series_1$Date)
time_series_1 <- time_series_1[, c("Date", "Version", "Days_since")]
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
time_series_1 = read.csv("time_series_1.csv")
time_series_1$Date <- as.Date(time_series_1$Date)
time_series_1 <- time_series_1[, c("Date", "Version", "Days_since")]
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(yintercept=0.5)
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("") + geom_hline(yintercept=0.204, color="blue")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "lm")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loes")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loess")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggsave(
"activity_after_days.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 300,
limitsize = TRUE,
bg = NULL
)
#boxplot
#library(ggplot2)
#ggplot(time_series_1) +
#      geom_boxplot(aes(x=Date, y=Days_since, color=Version))
ggplot(time_series_1) +
geom_boxplot(aes(x=Date, y=Days_since, color=Version))
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loess")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loess")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("Time until version change")
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loess")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("Part of time until version change")
ggsave(
"activity_after_days.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 300,
limitsize = TRUE,
bg = NULL
)
getwd()
setwd("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV")
getwd()
calc_created = read.csv("events/CalculationCreated.csv")
calc_created$Date <- as.Date(calc_created$Date)
p1 <- aggregate(calc_created["Event_count"], by=calc_created["Date"], sum)
m_added = read.csv("events/MetricAdded.csv")
m_added$Date <- as.Date(m_added$Date)
p2 <- aggregate(m_added["Event_count"], by=m_added["Date"], sum)
ds_added <- read.csv("events/NewDatasourcesAdded.csv")
ds_added$Date <- as.Date(ds_added$Date)
p3 <- aggregate(ds_added["Event_count"], by=ds_added["Date"], sum)
query_created <- read.csv("events/QueryCreated.csv")
query_created$Date <- as.Date(query_created$Date)
p4 <- aggregate(query_created["Event_count"], by=query_created["Date"], sum)
shared_urls <- read.csv("events/ShareUrl.csv")
shared_urls$Date <- as.Date(shared_urls$Date)
p5 <- aggregate(shared_urls["Event_count"], by=shared_urls["Date"], sum)
snapshot_shared <- read.csv("events/SnapshotShared.csv")
snapshot_shared$Date <- as.Date(snapshot_shared$Date)
p6 <- aggregate(snapshot_shared["Event_count"], by=snapshot_shared["Date"], sum)
users_added <- read.csv("events/UsersAdded.csv")
users_added$Date <- as.Date(users_added$Date)
p7 <- aggregate(users_added["Event_count"], by=users_added["Date"], sum)
p <- merge(p1, p2, by="Date")
p <- merge(p, p3, by="Date")
p <- merge(p, p4, by="Date")
p<- merge(p, p5, by="Date")
p <- merge(p,p6, by="Date")
p <- merge(p, p7, by="Date")
colnames(p) <- c("Date", "Calculations_created", "Metrics_added", "Data_sourses_added", "Query_created", "Shared_urls", "Shared_snapshots", "Users_added")
library(reshape2)
p <- melt(p, id.vars='Date')
library(ggplot2)
g <- ggplot(p, aes(x=Date, y=value, fill=variable, colour=variable)) +
geom_point() +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
dev.off()
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 300,
limitsize = TRUE,
bg = NULL
)
## First look at data.
Firts lets look at data and remove some column names patterns that are anoying to write.
```{r}
df <- read.csv("signups/SignupsAttributes.csv")
summary(df) #fast lookup
We can see, that most of users are not agencies.
knitr::opts_chunk$set(echo = TRUE)
# Set working dir
setwd("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV")
# Library installation.
if (!require("ggplot2")) install.packages("ggplot2");
if (!require("tidyverse")) install.packages("tidyverse");
if (!require("ggcorrplot")) install.packages("ggcorrplot");
if (!require("reshape"))install.packages("reshape");
# Load required libraries.
library(reshape)
library(ggplot2);
library(tidyverse);
library(ggcorrplot);
df
df %>%
rename_with(~str_remove(., "X.")) -> df
df %>%
rename_with(~str_remove(., "properties.")) -> df
df %>%
rename_with(~str_remove(., "_company")) -> df
agency <- select(df, c("is_agency"))
count(agency, is_agency) %>%
mutate_at(vars(n), ~ ./nrow(agency))
```{r}
knitr::opts_chunk$set(echo = TRUE)
# Set working dir
setwd("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV")
# Library installation.
if (!require("ggplot2")) install.packages("ggplot2");
if (!require("tidyverse")) install.packages("tidyverse");
if (!require("tidyverse")) install.packages("tidyverse");
if (!require("ggcorrplot")) install.packages("ggcorrplot");
if (!require("reshape"))install.packages("reshape");
# Load required libraries.
library(reshape)
library(ggplot2);
library(tidyverse);
library(ggcorrplot);
## First look at data.
Firts lets look at data and remove some column names patterns that are anoying to write.
```{r}
df <- read.csv("signups/SignupsAttributes.csv")
summary(df) #fast lookup
df
df %>%
rename_with(~str_remove(., "X.")) -> df
df %>%
rename_with(~str_remove(., "properties.")) -> df
df %>%
rename_with(~str_remove(., "_company")) -> df
agency <- select(df, c("is_agency"))
count(agency, is_agency) %>%
mutate_at(vars(n), ~ ./nrow(agency))
agency <- select(df, c("is_agency"))
count(agency, is_agency) %>%
mutate_at(vars(n), ~ ./nrow(agency))
We can see, that most of users are not agencies.
```{r}
df %>%
group_by(country) %>%
count -> country_agency #median only 9, mean 188, a lot of difference in use by country.
#lets look at only highest countries to see what are their properties.
summary(country_agency$n)
treshold <- quantile(country_agency$n, 0.75)
ggplot(country_agency[which(country_agency$n>treshold),],aes(x=reorder(country,-n), y=n)) +
#scale_y_continuous(trans='log2') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_bar(stat="identity")
a <- country_agency[which(country_agency$n>treshold),]
b <- a$country
c <- as.array(b)
plt2 <- df[which(df$country %in% c),] #look only at top 75% of countries
plt2 %>%
group_by(country, is_agency ) %>%
count -> plt2
df[df == "undefined"] <- NA
df[df == "true"] <- TRUE
df[df== "false"] <- FALSE
df
df$is_agency <- as.logical(df$is_agency)
df$had_trial <- as.logical(df$had_trial)
df$is_activated <- as.logical(df$is_activated)
df$has_mobile <- as.logical(df$has_mobile)
df$level_achieved <- as.numeric(df$level_achieved)
df
paying <- df
paying
time_series <- df
paying$became_paying[!is.na(paying$became_paying)] <- 1
paying$became_pql[!is.na(paying$became_pql)] <- 1
paying$cancelled[!is.na(paying$cancelled)] <- 1
paying
paying
paying$became_paying[is.na(paying$became_paying)] <- 0
paying$became_paying[is.na(paying$became_paying)] <- 0
paying$became_pql[is.na(paying$became_pql)] <- 0
paying$trial_features <- str_count(paying$trial_features,coll(";")) + 1
paying$trial_features[is.na(paying$trial_features)] <- 0
paying$became_paying <- as.numeric(paying$became_paying)
paying$became_pql <- as.numeric(paying$became_pql)
paying$cancelled <- as.numeric(paying$cancelled)
names = c("is_agency", "became_paying", "became_pql", "cancelled", "had_trial", "trial_features", "is_activated")
corr <- cor(paying[names])
ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
ggsave(
"corr.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 300,
limitsize = TRUE,
bg = NULL
)
paying_mean <- paying[c("country", "became_paying", "became_pql")]
paying_mean %>%
group_by(country) %>%
summarise(became_paying = n()) -> P
paying_mean <- aggregate(paying_mean[, 2:3], list(paying_mean$country), mean)
colnames(P) <- c("C", "sum")
paying_mean$sum <- P$sum
# Everything on the same plot by country
ggplot(paying_mean, aes(x = became_paying, y=became_pql, color= sum)) +
geom_point() + scale_color_gradientn(colors = rainbow(5))+
theme_bw() +
geom_smooth(method = "loess", SE=TRUE) +
ggtitle("Ratio of companies by country and amount ")
#lets look more close trials in those who became baying, will work more on it in python
#unfurtunatly used here to many dummy variables
t_s <- time_series[which(!is.na(time_series$became_paying)),]
t_s <- t_s[which(!is.na(t_s$trial_features)),]
t_s <- t_s[which(t_s$trial_features != ""),]
write.csv(t_s$trial_features, "trial_features.csv")
t_s_2 <- read.csv("trial_features_2.csv")
t_s_2 <- t_s_2$X0
table(t_s_2)
p2 <- as.data.frame(table(t_s_2))
df[which(is.na(df$became_paying)),]
n_t_s <- df[which(is.na(df$became_paying)),]
n_t_s <- n_t_s[which(n_t_s$trial_features != ""),]
write.csv(n_t_s$trial_features, "n_t_s.csv")
d <- read.csv("n_trial_features_2.csv")
d <- d$X0
d <- as.data.frame(table(d))
d$Freq <- d$Freq / sum(d$Freq)
p2$Freq <- p2$Freq / sum(p2$Freq)
p2$not_payed <- d$Freq
p2 %>% arrange(desc(Freq)) -> p2
colnames(p2) <- c("t_s_2", "become_payed", "not_become_payed")
p2 <- melt(p2, id.vars='t_s_2')
ggplot(p2, aes(x= t_s_2, y=value, fill=variable)) +
geom_bar(stat='identity', position='dodge') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Feature name") + ylab("Ratio") +
ggtitle("Probability density of features used by payed status")
time_series <- time_series[, c("company_created", "became_paying", "became_pql", "cancelled")]
time_series <- time_series[which(!is.na(time_series$became_paying)),]
time_series_1 = read.csv("time_series_1.csv")
time_series_1$Date <- as.Date(time_series_1$Date)
time_series_1 <- time_series_1[, c("Date", "Version", "Days_since")]
ggplot(time_series_1, aes(x=Date, y=Days_since, colour=Version)) +
scale_x_date(date_labels="%b %y",date_breaks  ="1 month" ) +
geom_point() + geom_smooth(method = "loess")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Starting date") +
scale_color_manual(labels = c("Cancelled", "Paying", "Pql"), values = c("blue", "red", "yellow")) +
ylim(0, 1) +
ylab("Part of total existing time") +
ggtitle("Part of time until version change")
getwd()
setwd("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV")
getwd()
calc_created = read.csv("events/CalculationCreated.csv")
calc_created$Date <- as.Date(calc_created$Date)
p1 <- aggregate(calc_created["Event_count"], by=calc_created["Date"], sum)
m_added = read.csv("events/MetricAdded.csv")
m_added$Date <- as.Date(m_added$Date)
p2 <- aggregate(m_added["Event_count"], by=m_added["Date"], sum)
ds_added <- read.csv("events/NewDatasourcesAdded.csv")
ds_added$Date <- as.Date(ds_added$Date)
p3 <- aggregate(ds_added["Event_count"], by=ds_added["Date"], sum)
query_created <- read.csv("events/QueryCreated.csv")
query_created$Date <- as.Date(query_created$Date)
p4 <- aggregate(query_created["Event_count"], by=query_created["Date"], sum)
shared_urls <- read.csv("events/ShareUrl.csv")
shared_urls$Date <- as.Date(shared_urls$Date)
p5 <- aggregate(shared_urls["Event_count"], by=shared_urls["Date"], sum)
snapshot_shared <- read.csv("events/SnapshotShared.csv")
snapshot_shared$Date <- as.Date(snapshot_shared$Date)
p6 <- aggregate(snapshot_shared["Event_count"], by=snapshot_shared["Date"], sum)
users_added <- read.csv("events/UsersAdded.csv")
users_added$Date <- as.Date(users_added$Date)
p7 <- aggregate(users_added["Event_count"], by=users_added["Date"], sum)
p <- merge(p1, p2, by="Date")
p <- merge(p, p3, by="Date")
p <- merge(p, p4, by="Date")
p<- merge(p, p5, by="Date")
p <- merge(p,p6, by="Date")
p <- merge(p, p7, by="Date")
colnames(p) <- c("Date", "Calculations_created", "Metrics_added", "Data_sourses_added", "Query_created", "Shared_urls", "Shared_snapshots", "Users_added")
library(reshape2)
p <- melt(p, id.vars='Date')
library(ggplot2)
g <- ggplot(p, aes(x=Date, y=value, fill=variable, colour=variable)) +
geom_point() +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
dev.off()
plot(g)
