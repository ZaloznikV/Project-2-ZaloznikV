p1 <- aggregate(calc_created["Event_count"], by=calc_created["Date"], sum)
m_added = read.csv("events/MetricAdded.csv")
m_added$Date <- as.Date(m_added$Date)
p2 <- aggregate(m_added["Event_count"], by=m_added["Date"], sum)
ds_added <- read.csv("events/NewDatasourcesAdded.csv")
ds_added$Date <- as.Date(ds_added$Date)
p3 <- aggregate(ds_added["Event_count"], by=ds_added["Date"], sum)
query_created <- read.csv("events/QueryCreated.csv")
query_created$Date <- as.Date(query_created$Date)
p4 <- aggregate(query_created["Event_count"], by=query_created["Date"], sum)
shared_urls <- read.csv("events/ShareUrl.csv")
shared_urls$Date <- as.Date(shared_urls$Date)
p5 <- aggregate(shared_urls["Event_count"], by=shared_urls["Date"], sum)
snapshot_shared <- read.csv("events/SnapshotShared.csv")
snapshot_shared$Date <- as.Date(snapshot_shared$Date)
p6 <- aggregate(snapshot_shared["Event_count"], by=snapshot_shared["Date"], sum)
users_added <- read.csv("events/UsersAdded.csv")
users_added$Date <- as.Date(users_added$Date)
p7 <- aggregate(users_added["Event_count"], by=users_added["Date"], sum)
p <- merge(p1, p2, by="Date")
p <- merge(p, p3, by="Date")
p <- merge(p, p4, by="Date")
p<- merge(p, p5, by="Date")
p <- merge(p,p6, by="Date")
p <- merge(p, p7, by="Date")
colnames(p) <- c("Date", "Calculations_created", "Metrics_added", "Data_sourses_added", "Query_created", "Shared_urls", "Shared_snapshots", "Users_added")
library(reshape2)
p <- melt(p, id.vars='Date')
View(p)
library(ggplot2)
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
tiff("test.tiff", units="in", width=5, height=5, res=300)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, color=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, color=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
p <- melt(p, id.vars='Date')
library(ggplot2)
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, color=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
plot(g)
# insert ggplot code
dev.off()
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 500,
limitsize = TRUE,
bg = NULL
)
getwd()
setwd("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV")
getwd()
calc_created = read.csv("events/CalculationCreated.csv")
calc_created$Date <- as.Date(calc_created$Date)
p1 <- aggregate(calc_created["Event_count"], by=calc_created["Date"], sum)
m_added = read.csv("events/MetricAdded.csv")
m_added$Date <- as.Date(m_added$Date)
p2 <- aggregate(m_added["Event_count"], by=m_added["Date"], sum)
ds_added <- read.csv("events/NewDatasourcesAdded.csv")
ds_added$Date <- as.Date(ds_added$Date)
p3 <- aggregate(ds_added["Event_count"], by=ds_added["Date"], sum)
query_created <- read.csv("events/QueryCreated.csv")
query_created$Date <- as.Date(query_created$Date)
p4 <- aggregate(query_created["Event_count"], by=query_created["Date"], sum)
shared_urls <- read.csv("events/ShareUrl.csv")
shared_urls$Date <- as.Date(shared_urls$Date)
p5 <- aggregate(shared_urls["Event_count"], by=shared_urls["Date"], sum)
snapshot_shared <- read.csv("events/SnapshotShared.csv")
snapshot_shared$Date <- as.Date(snapshot_shared$Date)
p6 <- aggregate(snapshot_shared["Event_count"], by=snapshot_shared["Date"], sum)
users_added <- read.csv("events/UsersAdded.csv")
users_added$Date <- as.Date(users_added$Date)
p7 <- aggregate(users_added["Event_count"], by=users_added["Date"], sum)
p <- merge(p1, p2, by="Date")
p <- merge(p, p3, by="Date")
p <- merge(p, p4, by="Date")
p<- merge(p, p5, by="Date")
p <- merge(p,p6, by="Date")
p <- merge(p, p7, by="Date")
colnames(p) <- c("Date", "Calculations_created", "Metrics_added", "Data_sourses_added", "Query_created", "Shared_urls", "Shared_snapshots", "Users_added")
library(reshape2)
p <- melt(p, id.vars='Date')
library(ggplot2)
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, color=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
plot(g)
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
plot(g)
show(g)
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, y=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) + geom_line()
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) + geom_line() +
geom_smooth(method="loess",se=TRUE, y=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
#g1 <- ggplot(p1, aes(x=Date, y=Event_count)) + geom_point() +  geom_smooth(method="lm")
#plot(g1)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) + geom_line()
g
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 500,
limitsize = TRUE,
bg = NULL
)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE, color=value)  +
labs(title="Change of events over time", y="Event count", x="Date")
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 500,
limitsize = TRUE,
bg = NULL
)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 500,
limitsize = TRUE,
bg = NULL
)
dev.off()
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 500,
limitsize = TRUE,
bg = NULL
)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
dev.off()
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 200,
limitsize = TRUE,
bg = NULL
)
library(ggplot2)
g <- ggplot(p, aes(x=Date, y=value, fill=variable)) +
geom_smooth(method="loess",se=TRUE)  +
labs(title="Change of events over time", y="Event count", x="Date")
dev.off()
plot(g)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 200,
limitsize = TRUE,
bg = NULL
)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 200,
limitsize = TRUE,
bg = NULL
)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 200,
limitsize = TRUE,
bg = NULL
)
ggsave(
"events_over_time.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 2,
width = NA,
height = NA,
units = c("in", "cm", "mm", "px"),
dpi = 300,
limitsize = TRUE,
bg = NULL
)
x <- c(-1:1:0.05)
x <- c(-1:1)
x
x <- c(-1:1,0.05)
x
seq?
?seq
x <- seq(-1,1,0.05)
x
y <- dnorm(x, 1,3)
plot(x,y)
plot(x,y, "-")
plot(x,y)
lines(plot(x,y))
plot(2*x,y)
plot(x,y)
###Draw 1000 samples from the Poisson distribution  lambda=10
###and compare relative frequencies with theoretical probability measure
n <- 1000
poisson <- rpois(n, lambda=10)
table(poisson)
plot(table(poisson), "b", col = "blue")
plot(x,y, "b")
plot(x,y, "b", color="blue")
plot(x,y, "b", col="blue")
###Draw 1000 samples from the Poisson distribution  lambda=10
###and compare relative frequencies with theoretical probability measure
n <- 1000
poisson <- rpois(n, lambda=10)
table(poisson)
plot(table(poisson), "b", col = "blue")
vec <- 0:22
lines(vec, dpois(vec, 10)*n, "b", col = "red")
plot(x,y, "b", col="blue")
D <- as.data.frame.table(table(x,y))
D
D <- as.data.frame.table(x,y)
table(x,y)
###Draw 1000 samples from the Poisson distribution  lambda=10
###and compare relative frequencies with theoretical probability measure
n <- 1000
poisson <- rpois(n, lambda=10)
poisson
table(boisson)
table(poisson)
D <- data.frame(x,y)
D
class(D)
View(D)
D.col <- c("ix", "ipsilon")
col(D) <- c("ix", "ipsilon")
colnames(D) <- c("ix", "ipsilon")
D
save(D,file="test.Rda")
getwd()
a <- load("test.rda")
save(D,"test.Rda")
save(D,file="test.Rda")
a <- load("test.rda")
a
saveRDS(D, file="data.Rda")
a <- load("test.Rda")
a
x <- seq(-1,1,0.05)
y <- dnorm(x, 1,3)
plot(x,y, "b", col="blue")
D <- data.frame(x,y)
colnames(D) <- c("ix", "ipsilon")
D
saveRDS(D, file="data.Rda")
a <- load("test.Rda")
a
write.csv(D, "test.csv", row.names=FALSE, quote=FALSE)
a <- open.csv("test.csv")
a <- csv.open("test.csv")
a <- read.csv("test.csv")
a
#############################
v <- runif(100,0,12)
v
Map("*", v)
Map(%*%, v)
Map"*", v)
Map("*", v)
Map("*", list(v))
#############################
m = 1
v <- runif(100,0,12)
for (e in v){
m = m*e
}
m
table(v)
poisson
max.col(table(v))
Map("round", v)
v <- Map("round", v)
v
v <- Map("round", list(v))
v
v <- Map("round", (v))
v
class(v)
v(1)
v([1]
v[1]
v[2]
table(v)
max(table(v))
as.seq(v)
as.array(v)
v <- as.array(v)
table(v)
v <- as.array(v)
v
t(v)
as.array(t(v))
v <- as.array(t(v))
table(v)
v <- runif(100,0,12)
v
class(v)
seq(1:100)
a <- c()
a
a
a(1) = 2
a[1] = 2
a
a[10] = 4
a
#############################
v <- runif(100,0,12)
i = 1
a <- c()
for (e in v){
a[i] = round(e)
i = i + 1
}
a
table(a)
max(table(a))
index.max(table(a))
(table(a)
table(a)
table(a)
sort(table(a))
sort(table(a), decreasing=TRUE)
sort(table(a), decreasing=TRUE)[1]
sort(table(a), decreasing=TRUE)[1][1]
k <- sample(seq(0,12), 100)
k <- sample(seq(0:12), 100)
k <- sample(seq(0:12), 100, replace=TRUE)
k
table(k)
sort(table(k))
sort(table(k), decreasing = TRUE)
sort(table(k), decreasing = TRUE)[1]
print(sort(table(k), decreasing = TRUE)[1])
a <- rgamma(100)
a <- rgamma(100, 1)
a
b = rbeta(100, 0.5, 0.5)
d <- data.frame(a,b)
d
colname(d) = c("Gamma", "Beta")
colnames(d) <- c("Gamma", "Beta")
d
write.csv(d, file = "csv_test.csv"  col.names = NA, row.names = FALSE, sep = "," )
write.csv(d, file = "csv_test.csv" , col.names = NA, row.names = FALSE, sep = "," )
write.csv(d, file = "csv_test.csv" , col.names = NA, row.names = FALSE, sep = ";" )
write.csv2(d, file = "csv_test.csv" , row.names = FALSE, sep = ";" )
df <-read.csv("csv_test.csv")
df
df <-read.csv2("csv_test.csv")
df
plot(df)
plot(lines(df))
plot(df)
plot(df, "b")
plot(df, "b")
plot(df, "b")
plot(df$Gamma, df$Beta, "b")
plot(df$Gamma, df$Beta, "o")
plot(df$Gamma, df$Beta, "o")
plot(df$Gamma, df$Beta)
length(df)
length(df$Gamma)
rm(list = df$Gamma, pos = 2)
a <- df$Gamma
a
rm(list = a, pos = 2)
a <- as.list(a)
rm(list = a, pos = 2)
a[-2]
a <- a[-2]
a
length(a)
sample(1,5,10)
sample(1,5,10)
sample(1,5,10, replace = TRUE)
sample(seq(1:5),10, replace = TRUE)
a <- sample(seq(1:5),10, replace = TRUE)
a
a[a != 1]
sample("abcdefg", 20, replace = TRUE)
seq(a:g)
seq("a":"g")
a <- "dsfds"
a[2]
a
a(2)
as.list(a)
a
m = 4
n = 3
a <- runif(m*n, -1,1)
a
as.matrix(a, nrow = m, ncol=n)
as.matrix(a, nrow = 4)
as.matrix(a, byrow=TRUE, dimnames=4)
as.matrix(a, byrow=TRUE)
as.matrix(a, nrow= 3)
b <- as.matrix(a, nrow= 3)
b
b <- as.matrix(a, 3)
b
b <- matrix(a, nrow=m)
b
b <- matrix(a, nrow=n, ncols=m)
b
b
B <- b%*%t(b)
B
B <- t(b)%*%b
B
eigen(B)
stri_rand_strings(10, 5, pattern = "[a-g]")
?eigen
eigen(B, only.values = TRUE)
load("C:/Users/zaloz/Desktop/exFMF/upd/project-2-databox-ZaloznikV/data.Rda")
